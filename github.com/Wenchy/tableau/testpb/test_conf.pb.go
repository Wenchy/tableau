// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: test_conf.proto

package testpb

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ItemConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemMap map[int32]*ItemConf_Row `protobuf:"bytes,1,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ItemConf) Reset() {
	*x = ItemConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf) ProtoMessage() {}

func (x *ItemConf) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf.ProtoReflect.Descriptor instead.
func (*ItemConf) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0}
}

func (x *ItemConf) GetItemMap() map[int32]*ItemConf_Row {
	if x != nil {
		return x.ItemMap
	}
	return nil
}

type ActivityConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityMap map[int32]*ActivityConf_Activity `protobuf:"bytes,1,rep,name=activity_map,json=activityMap,proto3" json:"activity_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActivityConf) Reset() {
	*x = ActivityConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConf) ProtoMessage() {}

func (x *ActivityConf) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConf.ProtoReflect.Descriptor instead.
func (*ActivityConf) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityConf) GetActivityMap() map[int32]*ActivityConf_Activity {
	if x != nil {
		return x.ActivityMap
	}
	return nil
}

type ItemConf_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc       string                `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IconId     int32                 `protobuf:"varint,4,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	Attributes []*ItemConf_Attribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Effects    []int32               `protobuf:"varint,6,rep,packed,name=effects,proto3" json:"effects,omitempty"`
	ExpiryTime *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
}

func (x *ItemConf_Row) Reset() {
	*x = ItemConf_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf_Row) ProtoMessage() {}

func (x *ItemConf_Row) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf_Row.ProtoReflect.Descriptor instead.
func (*ItemConf_Row) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ItemConf_Row) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemConf_Row) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemConf_Row) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ItemConf_Row) GetIconId() int32 {
	if x != nil {
		return x.IconId
	}
	return 0
}

func (x *ItemConf_Row) GetAttributes() []*ItemConf_Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ItemConf_Row) GetEffects() []int32 {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *ItemConf_Row) GetExpiryTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiryTime
	}
	return nil
}

type ItemConf_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value       int32                    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Enhance     []*ItemConf_Enhance      `protobuf:"bytes,3,rep,name=enhance,proto3" json:"enhance,omitempty"`
	ActivityMap map[int32]*ItemConf_Cost `protobuf:"bytes,4,rep,name=activity_map,json=activityMap,proto3" json:"activity_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ItemConf_Attribute) Reset() {
	*x = ItemConf_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf_Attribute) ProtoMessage() {}

func (x *ItemConf_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf_Attribute.ProtoReflect.Descriptor instead.
func (*ItemConf_Attribute) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ItemConf_Attribute) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemConf_Attribute) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ItemConf_Attribute) GetEnhance() []*ItemConf_Enhance {
	if x != nil {
		return x.Enhance
	}
	return nil
}

func (x *ItemConf_Attribute) GetActivityMap() map[int32]*ItemConf_Cost {
	if x != nil {
		return x.ActivityMap
	}
	return nil
}

type ItemConf_Enhance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Tips []string `protobuf:"bytes,3,rep,name=tips,proto3" json:"tips,omitempty"`
}

func (x *ItemConf_Enhance) Reset() {
	*x = ItemConf_Enhance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf_Enhance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf_Enhance) ProtoMessage() {}

func (x *ItemConf_Enhance) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf_Enhance.ProtoReflect.Descriptor instead.
func (*ItemConf_Enhance) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ItemConf_Enhance) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemConf_Enhance) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ItemConf_Enhance) GetTips() []string {
	if x != nil {
		return x.Tips
	}
	return nil
}

type ItemConf_Cost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ItemConf_Cost) Reset() {
	*x = ItemConf_Cost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf_Cost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf_Cost) ProtoMessage() {}

func (x *ItemConf_Cost) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf_Cost.ProtoReflect.Descriptor instead.
func (*ItemConf_Cost) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ItemConf_Cost) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ItemConf_Cost) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityConf_Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterMap  map[int32]*ActivityConf_Chapter `protobuf:"bytes,1,rep,name=chapter_map,json=chapterMap,proto3" json:"chapter_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChapterDesc string                          `protobuf:"bytes,2,opt,name=chapter_desc,json=chapterDesc,proto3" json:"chapter_desc,omitempty"`
}

func (x *ActivityConf_Activity) Reset() {
	*x = ActivityConf_Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConf_Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConf_Activity) ProtoMessage() {}

func (x *ActivityConf_Activity) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConf_Activity.ProtoReflect.Descriptor instead.
func (*ActivityConf_Activity) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ActivityConf_Activity) GetChapterMap() map[int32]*ActivityConf_Chapter {
	if x != nil {
		return x.ChapterMap
	}
	return nil
}

func (x *ActivityConf_Activity) GetChapterDesc() string {
	if x != nil {
		return x.ChapterDesc
	}
	return ""
}

type ActivityConf_Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionMap  map[int32]*ActivityConf_Row `protobuf:"bytes,1,rep,name=section_map,json=sectionMap,proto3" json:"section_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SectionDesc string                      `protobuf:"bytes,2,opt,name=section_desc,json=sectionDesc,proto3" json:"section_desc,omitempty"`
}

func (x *ActivityConf_Chapter) Reset() {
	*x = ActivityConf_Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConf_Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConf_Chapter) ProtoMessage() {}

func (x *ActivityConf_Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConf_Chapter.ProtoReflect.Descriptor instead.
func (*ActivityConf_Chapter) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ActivityConf_Chapter) GetSectionMap() map[int32]*ActivityConf_Row {
	if x != nil {
		return x.SectionMap
	}
	return nil
}

func (x *ActivityConf_Chapter) GetSectionDesc() string {
	if x != nil {
		return x.SectionDesc
	}
	return ""
}

type ActivityConf_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ChapterId  int32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	// string chapter_desc = 3 [ (col) = "章描述" ];
	SectionId int32 `protobuf:"varint,4,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	// string section_desc = 5 [ (col) = "节描述" ];
	Items     []*Item              `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	BeginTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration  *duration.Duration   `protobuf:"bytes,9,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ActivityConf_Row) Reset() {
	*x = ActivityConf_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityConf_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityConf_Row) ProtoMessage() {}

func (x *ActivityConf_Row) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityConf_Row.ProtoReflect.Descriptor instead.
func (*ActivityConf_Row) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ActivityConf_Row) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityConf_Row) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ActivityConf_Row) GetSectionId() int32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *ActivityConf_Row) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ActivityConf_Row) GetBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *ActivityConf_Row) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ActivityConf_Row) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_test_conf_proto protoreflect.FileDescriptor

var file_test_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x07, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x44, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x0c, 0xda, 0xf0, 0x19, 0x08, 0xe9, 0x81, 0x93, 0xe5, 0x85, 0xb7, 0x49, 0x44, 0x52,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x70, 0x1a, 0x4e, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xcd, 0x02, 0x0a, 0x03, 0x52, 0x6f, 0x77,
	0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xf0,
	0x19, 0x08, 0xe9, 0x81, 0x93, 0xe5, 0x85, 0xb7, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xf0,
	0x19, 0x06, 0xe5, 0x90, 0x8d, 0xe5, 0xad, 0x97, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xf0,
	0x19, 0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x23,
	0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0xca, 0xf0, 0x19, 0x06, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x06, 0x69, 0x63, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x42, 0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x42, 0x14, 0xca, 0xf0, 0x19, 0x0c,
	0xe6, 0x95, 0x88, 0xe6, 0x9e, 0x9c, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xd0, 0xf0, 0x19, 0x18,
	0x52, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10, 0xca, 0xf0, 0x19, 0x0c,
	0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xb1, 0x02, 0x0a, 0x09, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x06, 0xca, 0xf0, 0x19, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xca,
	0xf0, 0x19, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x65, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x2e, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe5, 0xbc,
	0xba, 0xe5, 0x8c, 0x96, 0x52, 0x07, 0x65, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x58, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a,
	0xda, 0xf0, 0x19, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x1a, 0x53, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6b, 0x0a, 0x07,
	0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x06, 0xca, 0xf0, 0x19, 0x02, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0xf0, 0x19, 0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x14, 0xca,
	0xf0, 0x19, 0x0c, 0xe6, 0x8f, 0x90, 0xe7, 0xa4, 0xba, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xd0,
	0xf0, 0x19, 0x18, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x1a, 0x48, 0x0a, 0x04, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe6, 0x95, 0xb0, 0xe9, 0x87, 0x8f, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x3a, 0x08, 0x8a, 0xb2, 0x19, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xc7, 0x08,
	0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x54,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0c, 0xda, 0xf0, 0x19, 0x08, 0xe6,
	0xb4, 0xbb, 0xe5, 0x8a, 0xa8, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x70, 0x1a, 0x5b, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xf0, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x57,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x09, 0xda, 0xf0, 0x19, 0x05, 0xe7, 0xab, 0xa0, 0x49, 0x44, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca,
	0xf0, 0x19, 0x09, 0xe7, 0xab, 0xa0, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x1a, 0x59, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0xea, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x12, 0x56, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x09, 0xda, 0xf0, 0x19, 0x05, 0xe8, 0x8a, 0x82, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xf0, 0x19, 0x09, 0xe8, 0x8a, 0x82, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x1a, 0x55, 0x0a, 0x0f, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x95, 0x03, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c,
	0xca, 0xf0, 0x19, 0x08, 0xe6, 0xb4, 0xbb, 0xe5, 0x8a, 0xa8, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xca, 0xf0,
	0x19, 0x05, 0xe7, 0xab, 0xa0, 0x49, 0x44, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xca, 0xf0, 0x19, 0x05, 0xe8, 0x8a, 0x82, 0x49,
	0x44, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe5, 0xa5, 0x96,
	0xe5, 0x8a, 0xb1, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10, 0xca, 0xf0, 0x19, 0x0c,
	0xe5, 0xbc, 0x80, 0xe5, 0xa7, 0x8b, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10, 0xca, 0xf0, 0x19, 0x0c, 0xe7, 0xbb, 0x93, 0xe6, 0x9d,
	0x9f, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x47, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0xca,
	0xf0, 0x19, 0x0c, 0xe6, 0x8c, 0x81, 0xe7, 0xbb, 0xad, 0xe5, 0xa4, 0x9a, 0xe4, 0xb9, 0x85, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0c, 0x8a, 0xb2, 0x19, 0x08, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x36, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x65, 0x6e, 0x63, 0x68, 0x79, 0x2f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x61, 0x75, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x3b, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0xca, 0xf3, 0x18, 0x09, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_conf_proto_rawDescOnce sync.Once
	file_test_conf_proto_rawDescData = file_test_conf_proto_rawDesc
)

func file_test_conf_proto_rawDescGZIP() []byte {
	file_test_conf_proto_rawDescOnce.Do(func() {
		file_test_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_conf_proto_rawDescData)
	})
	return file_test_conf_proto_rawDescData
}

var file_test_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_test_conf_proto_goTypes = []interface{}{
	(*ItemConf)(nil),              // 0: test.ItemConf
	(*ActivityConf)(nil),          // 1: test.ActivityConf
	nil,                           // 2: test.ItemConf.ItemMapEntry
	(*ItemConf_Row)(nil),          // 3: test.ItemConf.Row
	(*ItemConf_Attribute)(nil),    // 4: test.ItemConf.Attribute
	(*ItemConf_Enhance)(nil),      // 5: test.ItemConf.Enhance
	(*ItemConf_Cost)(nil),         // 6: test.ItemConf.Cost
	nil,                           // 7: test.ItemConf.Attribute.ActivityMapEntry
	nil,                           // 8: test.ActivityConf.ActivityMapEntry
	(*ActivityConf_Activity)(nil), // 9: test.ActivityConf.Activity
	(*ActivityConf_Chapter)(nil),  // 10: test.ActivityConf.Chapter
	(*ActivityConf_Row)(nil),      // 11: test.ActivityConf.Row
	nil,                           // 12: test.ActivityConf.Activity.ChapterMapEntry
	nil,                           // 13: test.ActivityConf.Chapter.SectionMapEntry
	(*timestamp.Timestamp)(nil),   // 14: google.protobuf.Timestamp
	(*Item)(nil),                  // 15: test.Item
	(*duration.Duration)(nil),     // 16: google.protobuf.Duration
}
var file_test_conf_proto_depIdxs = []int32{
	2,  // 0: test.ItemConf.item_map:type_name -> test.ItemConf.ItemMapEntry
	8,  // 1: test.ActivityConf.activity_map:type_name -> test.ActivityConf.ActivityMapEntry
	3,  // 2: test.ItemConf.ItemMapEntry.value:type_name -> test.ItemConf.Row
	4,  // 3: test.ItemConf.Row.attributes:type_name -> test.ItemConf.Attribute
	14, // 4: test.ItemConf.Row.expiry_time:type_name -> google.protobuf.Timestamp
	5,  // 5: test.ItemConf.Attribute.enhance:type_name -> test.ItemConf.Enhance
	7,  // 6: test.ItemConf.Attribute.activity_map:type_name -> test.ItemConf.Attribute.ActivityMapEntry
	6,  // 7: test.ItemConf.Attribute.ActivityMapEntry.value:type_name -> test.ItemConf.Cost
	9,  // 8: test.ActivityConf.ActivityMapEntry.value:type_name -> test.ActivityConf.Activity
	12, // 9: test.ActivityConf.Activity.chapter_map:type_name -> test.ActivityConf.Activity.ChapterMapEntry
	13, // 10: test.ActivityConf.Chapter.section_map:type_name -> test.ActivityConf.Chapter.SectionMapEntry
	15, // 11: test.ActivityConf.Row.items:type_name -> test.Item
	14, // 12: test.ActivityConf.Row.begin_time:type_name -> google.protobuf.Timestamp
	14, // 13: test.ActivityConf.Row.end_time:type_name -> google.protobuf.Timestamp
	16, // 14: test.ActivityConf.Row.duration:type_name -> google.protobuf.Duration
	10, // 15: test.ActivityConf.Activity.ChapterMapEntry.value:type_name -> test.ActivityConf.Chapter
	11, // 16: test.ActivityConf.Chapter.SectionMapEntry.value:type_name -> test.ActivityConf.Row
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_test_conf_proto_init() }
func file_test_conf_proto_init() {
	if File_test_conf_proto != nil {
		return
	}
	file_options_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_test_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf_Enhance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf_Cost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConf_Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConf_Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityConf_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_conf_proto_goTypes,
		DependencyIndexes: file_test_conf_proto_depIdxs,
		MessageInfos:      file_test_conf_proto_msgTypes,
	}.Build()
	File_test_conf_proto = out.File
	file_test_conf_proto_rawDesc = nil
	file_test_conf_proto_goTypes = nil
	file_test_conf_proto_depIdxs = nil
}
