// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: test_conf.proto

package testpb

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ItemConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc       string  `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	RewardId   int32   `protobuf:"varint,3,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`
	Items      []*Item `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	Datetime   int64   `protobuf:"varint,5,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Attributes []int32 `protobuf:"varint,6,rep,packed,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *ItemConf) Reset() {
	*x = ItemConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemConf) ProtoMessage() {}

func (x *ItemConf) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemConf.ProtoReflect.Descriptor instead.
func (*ItemConf) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0}
}

func (x *ItemConf) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemConf) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ItemConf) GetRewardId() int32 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *ItemConf) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ItemConf) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *ItemConf) GetAttributes() []int32 {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type RewardConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities map[int32]*RewardConf_Activity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RewardConf) Reset() {
	*x = RewardConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardConf) ProtoMessage() {}

func (x *RewardConf) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardConf.ProtoReflect.Descriptor instead.
func (*RewardConf) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1}
}

func (x *RewardConf) GetActivities() map[int32]*RewardConf_Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type RewardConf_Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chapters map[int32]*RewardConf_Chapter `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RewardConf_Activity) Reset() {
	*x = RewardConf_Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardConf_Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardConf_Activity) ProtoMessage() {}

func (x *RewardConf_Activity) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardConf_Activity.ProtoReflect.Descriptor instead.
func (*RewardConf_Activity) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *RewardConf_Activity) GetChapters() map[int32]*RewardConf_Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type RewardConf_Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sections map[int32]*RewardConf_Row `protobuf:"bytes,1,rep,name=sections,proto3" json:"sections,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RewardConf_Chapter) Reset() {
	*x = RewardConf_Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardConf_Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardConf_Chapter) ProtoMessage() {}

func (x *RewardConf_Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardConf_Chapter.ProtoReflect.Descriptor instead.
func (*RewardConf_Chapter) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 2}
}

func (x *RewardConf_Chapter) GetSections() map[int32]*RewardConf_Row {
	if x != nil {
		return x.Sections
	}
	return nil
}

type RewardConf_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int32                `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ChapterId  int32                `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	SectionId  int32                `protobuf:"varint,3,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Desc       string               `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Duration   *duration.Duration   `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RewardConf_Row) Reset() {
	*x = RewardConf_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardConf_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardConf_Row) ProtoMessage() {}

func (x *RewardConf_Row) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardConf_Row.ProtoReflect.Descriptor instead.
func (*RewardConf_Row) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 3}
}

func (x *RewardConf_Row) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *RewardConf_Row) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *RewardConf_Row) GetSectionId() int32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *RewardConf_Row) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RewardConf_Row) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RewardConf_Row) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_test_conf_proto protoreflect.FileDescriptor

var file_test_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c,
	0xca, 0xf0, 0x19, 0x08, 0xe9, 0x81, 0x93, 0xe5, 0x85, 0xb7, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xca, 0xf0, 0x19, 0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0f, 0xca, 0xf0, 0x19, 0x0b, 0xe5, 0xa5, 0x96, 0xe5, 0x8a, 0xb1, 0xe6,
	0xb1, 0xa0, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xca, 0xf0, 0x19, 0x06, 0xe9,
	0x81, 0x93, 0xe5, 0x85, 0xb7, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x14,
	0xca, 0xf0, 0x19, 0x0c, 0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0xd0, 0xf0, 0x19, 0x17, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x05, 0x42, 0x14, 0xca, 0xf0, 0x19, 0x0c, 0xe5, 0xb1, 0x9e, 0xe6, 0x80, 0xa7, 0xe5, 0x88,
	0x97, 0xe8, 0xa1, 0xa8, 0xd0, 0xf0, 0x19, 0x18, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x3a, 0x0a, 0x8a, 0xb2, 0x19, 0x06, 0x53, 0x68, 0x65, 0x65, 0x74, 0x31,
	0x22, 0xed, 0x06, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x51, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0f, 0xda, 0xf0, 0x19, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x1a, 0x58, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb6, 0x01, 0x0a,
	0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x42, 0x0e, 0xda, 0xf0, 0x19, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x55,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb0, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x12, 0x52, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0e, 0xda, 0xf0, 0x19,
	0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52, 0x08, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x51, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xb9, 0x02, 0x0a, 0x03, 0x52, 0x6f, 0x77,
	0x12, 0x2d, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xf0, 0x19, 0x08, 0xe5, 0xa5, 0x96, 0xe5, 0x8a,
	0xb1, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xca, 0xf0, 0x19, 0x03, 0xe7, 0xab, 0xa0, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xca, 0xf0, 0x19,
	0x03, 0xe8, 0x8a, 0x82, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0xf0, 0x19, 0x06, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x4a, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x10,
	0xca, 0xf0, 0x19, 0x0c, 0xe5, 0x8f, 0x91, 0xe7, 0x94, 0x9f, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x47, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0xca, 0xf0, 0x19, 0x0c, 0xe6, 0x8c,
	0x81, 0xe7, 0xbb, 0xad, 0xe5, 0xa4, 0x9a, 0xe4, 0xb9, 0x85, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x0a, 0x8a, 0xb2, 0x19, 0x06, 0x53, 0x68, 0x65, 0x65, 0x74, 0x32,
	0x42, 0x36, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57,
	0x65, 0x6e, 0x63, 0x68, 0x79, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x62, 0x3b, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0xca, 0xf3, 0x18, 0x09, 0x54,
	0x65, 0x73, 0x74, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_conf_proto_rawDescOnce sync.Once
	file_test_conf_proto_rawDescData = file_test_conf_proto_rawDesc
)

func file_test_conf_proto_rawDescGZIP() []byte {
	file_test_conf_proto_rawDescOnce.Do(func() {
		file_test_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_conf_proto_rawDescData)
	})
	return file_test_conf_proto_rawDescData
}

var file_test_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_test_conf_proto_goTypes = []interface{}{
	(*ItemConf)(nil),            // 0: test.ItemConf
	(*RewardConf)(nil),          // 1: test.RewardConf
	nil,                         // 2: test.RewardConf.ActivitiesEntry
	(*RewardConf_Activity)(nil), // 3: test.RewardConf.Activity
	(*RewardConf_Chapter)(nil),  // 4: test.RewardConf.Chapter
	(*RewardConf_Row)(nil),      // 5: test.RewardConf.Row
	nil,                         // 6: test.RewardConf.Activity.ChaptersEntry
	nil,                         // 7: test.RewardConf.Chapter.SectionsEntry
	(*Item)(nil),                // 8: test.Item
	(*timestamp.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*duration.Duration)(nil),   // 10: google.protobuf.Duration
}
var file_test_conf_proto_depIdxs = []int32{
	8,  // 0: test.ItemConf.items:type_name -> test.Item
	2,  // 1: test.RewardConf.activities:type_name -> test.RewardConf.ActivitiesEntry
	3,  // 2: test.RewardConf.ActivitiesEntry.value:type_name -> test.RewardConf.Activity
	6,  // 3: test.RewardConf.Activity.chapters:type_name -> test.RewardConf.Activity.ChaptersEntry
	7,  // 4: test.RewardConf.Chapter.sections:type_name -> test.RewardConf.Chapter.SectionsEntry
	9,  // 5: test.RewardConf.Row.timestamp:type_name -> google.protobuf.Timestamp
	10, // 6: test.RewardConf.Row.duration:type_name -> google.protobuf.Duration
	4,  // 7: test.RewardConf.Activity.ChaptersEntry.value:type_name -> test.RewardConf.Chapter
	5,  // 8: test.RewardConf.Chapter.SectionsEntry.value:type_name -> test.RewardConf.Row
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_test_conf_proto_init() }
func file_test_conf_proto_init() {
	if File_test_conf_proto != nil {
		return
	}
	file_options_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_test_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardConf_Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardConf_Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardConf_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_conf_proto_goTypes,
		DependencyIndexes: file_test_conf_proto_depIdxs,
		MessageInfos:      file_test_conf_proto_msgTypes,
	}.Build()
	File_test_conf_proto = out.File
	file_test_conf_proto_rawDesc = nil
	file_test_conf_proto_goTypes = nil
	file_test_conf_proto_depIdxs = nil
}
