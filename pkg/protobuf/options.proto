syntax = "proto3";
// For easy use, comment the package delaration.
// package tableau;
option go_package = "github.com/Wenchy/tableau/tableaupb;tableaupb";

import "google/protobuf/descriptor.proto";

// import "enum.proto";

extend google.protobuf.FileOptions
{
	string workbook = 51001;
}

extend google.protobuf.MessageOptions
{
    string worksheet = 52001;
    int32 metarow = 52002; // [default = 1]; // exact row number of meta info of this tableau
    int32 descrow = 52003; // [default = 1]; // exact row number of description of this tableau
    int32 datarow = 52004; // [default = 2]; // start row number of data

	// string x_workbook = 52005;
}

enum FieldType
{
    // auto deduced protobuf types
    FIELD_TYPE_DEFAULT = 0;
    
    //////////////////////////////
    /////Build-in Types///////////
    //////////////////////////////
    // interger
    FIELD_TYPE_INT32 = 1;
    FIELD_TYPE_UINT32 = 2;
    FIELD_TYPE_INT64 = 3;
    FIELD_TYPE_UINT64 = 4;
    // floating-point number
    FIELD_TYPE_DOUBLE = 5;
    FIELD_TYPE_FLOAT = 6;
    // bool
    FIELD_TYPE_BOOL = 7;
    // string
    FIELD_TYPE_STRING = 8;

    ////////////////////////
    /////Message Type//////
    ////////////////////////
    FIELD_TYPE_MESSSAGE = 10;

    ////////////////////////
    /////Extended Types/////
    ////////////////////////
    // time
    FIELD_TYPE_DATE = 21; // format: "yyyy-MM-dd"
    FIELD_TYPE_TIME = 22; // format: "HH:mm:ss"
    FIELD_TYPE_DATETIME = 23; // format: "yyyy-MM-dd HH:mm:ss"
    // list in a cell:
    // - the list **item** must be **built-in** type
    // - format: ',' separated items
    FIELD_TYPE_CELL_LIST = 24;
    // map in a cell:
    // - both the **key** and **value** must be **built-in** type
    // - format: key-value pairs is separated by ',', and
    //           key and value is separated by ':'
    FIELD_TYPE_CELL_MAP = 25;

    // FIELD_TYPE_RICH_TEXT = 31;
    // FIELD_TYPE_JSON = 32;
}

extend google.protobuf.FieldOptions
{
    // NOTE(wenchyzhu): It's pity that something goes wrong with protoc.
    //  We cannot define an option's name as `name` when extend FieldOptions. Because protoc reports
    //  an error: `Option field "(name)" is not a field or extension of message "FieldOptions".``
    
    // column caption: the word `caption` is self-explanatory to denote the metarow.
    // It means `caption` if field's type is scalar,
    // or `caption prefix` if field's type is composite such as List and Map.
    string caption = 53001;
    // tableau field type
    FieldType type = 53002; // [default = FIELD_TYPE_DEFAULT];
    string key = 53003;
    bool required = 53004; // [default = true];
    string sep = 53005; // [default = ',']; separator
    string subsep = 53006; // [default = ':']; sub separator

    ////////////////////////////////////////////////////////////////////////
    // Simple validators below
    ////////////////////////////////////////////////////////////////////////
    // Different meanings:
    // repeated: size range of array
    // integer: value range
    // string: count of utf-8 code point
    int32 min = 53101; // min value
    int32 max = 53102; // max value
    string range = 53103; // format like set description: [1,10], (1,10], [1,10), [1,~]
}