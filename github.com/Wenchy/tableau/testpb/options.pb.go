// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: options.proto

package testpb

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TableauFieldType int32

const (
	TableauFieldType_TABLEAU_FIELD_DEFAULT   TableauFieldType = 0 // auto deduced protobuf basic type
	TableauFieldType_TABLEAU_FIELD_DATE      TableauFieldType = 1 // format: "yyyy-MM-dd"
	TableauFieldType_TABLEAU_FIELD_TIME      TableauFieldType = 2 // format: "HH:mm:ss"
	TableauFieldType_TABLEAU_FIELD_DATETIME  TableauFieldType = 3 // format: "yyyy-MM-dd HH:mm:ss"
	TableauFieldType_TABLEAU_FIELD_ARRAY     TableauFieldType = 4 // format: ',' separated list
	TableauFieldType_TABLEAU_FIELD_RICH_TEXT TableauFieldType = 10
	TableauFieldType_TABLEAU_FIELD_JSON      TableauFieldType = 11
)

// Enum value maps for TableauFieldType.
var (
	TableauFieldType_name = map[int32]string{
		0:  "TABLEAU_FIELD_DEFAULT",
		1:  "TABLEAU_FIELD_DATE",
		2:  "TABLEAU_FIELD_TIME",
		3:  "TABLEAU_FIELD_DATETIME",
		4:  "TABLEAU_FIELD_ARRAY",
		10: "TABLEAU_FIELD_RICH_TEXT",
		11: "TABLEAU_FIELD_JSON",
	}
	TableauFieldType_value = map[string]int32{
		"TABLEAU_FIELD_DEFAULT":   0,
		"TABLEAU_FIELD_DATE":      1,
		"TABLEAU_FIELD_TIME":      2,
		"TABLEAU_FIELD_DATETIME":  3,
		"TABLEAU_FIELD_ARRAY":     4,
		"TABLEAU_FIELD_RICH_TEXT": 10,
		"TABLEAU_FIELD_JSON":      11,
	}
)

func (x TableauFieldType) Enum() *TableauFieldType {
	p := new(TableauFieldType)
	*p = x
	return p
}

func (x TableauFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableauFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_options_proto_enumTypes[0].Descriptor()
}

func (TableauFieldType) Type() protoreflect.EnumType {
	return &file_options_proto_enumTypes[0]
}

func (x TableauFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableauFieldType.Descriptor instead.
func (TableauFieldType) EnumDescriptor() ([]byte, []int) {
	return file_options_proto_rawDescGZIP(), []int{0}
}

var file_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         2001,
		Name:          "col",
		Tag:           "bytes,2001,opt,name=col",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*TableauFieldType)(nil),
		Field:         2002,
		Name:          "type",
		Tag:           "varint,2002,opt,name=type,enum=TableauFieldType",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         2003,
		Name:          "required",
		Tag:           "varint,2003,opt,name=required",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         2004,
		Name:          "separator",
		Tag:           "bytes,2004,opt,name=separator",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         2005,
		Name:          "subseparator",
		Tag:           "bytes,2005,opt,name=subseparator",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         3001,
		Name:          "min",
		Tag:           "varint,3001,opt,name=min",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         3002,
		Name:          "max",
		Tag:           "varint,3002,opt,name=max",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         3003,
		Name:          "range",
		Tag:           "bytes,3003,opt,name=range",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         2001,
		Name:          "workbook",
		Tag:           "bytes,2001,opt,name=workbook",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         2002,
		Name:          "worksheet",
		Tag:           "bytes,2002,opt,name=worksheet",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*uint32)(nil),
		Field:         2003,
		Name:          "metarow",
		Tag:           "varint,2003,opt,name=metarow",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*uint32)(nil),
		Field:         2004,
		Name:          "descrow",
		Tag:           "varint,2004,opt,name=descrow",
		Filename:      "options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*uint32)(nil),
		Field:         2005,
		Name:          "datarow",
		Tag:           "varint,2005,opt,name=datarow",
		Filename:      "options.proto",
	},
}

// Extension fields to descriptor.FieldOptions.
var (
	// column name if scala type, or name prefix if repeated type
	//
	// optional string col = 2001;
	E_Col = &file_options_proto_extTypes[0]
	// tableau field type
	//
	// optional TableauFieldType type = 2002;
	E_Type = &file_options_proto_extTypes[1] // [default = TABLEAU_FIELD_DEFAULT];
	// optional bool required = 2003;
	E_Required = &file_options_proto_extTypes[2] // [default = true];
	// optional string separator = 2004;
	E_Separator = &file_options_proto_extTypes[3] // [default = ','];
	// optional string subseparator = 2005;
	E_Subseparator = &file_options_proto_extTypes[4] // [default = ':'];
	////////////////////////////////////////////////////////////////////////
	// Simple validators below
	////////////////////////////////////////////////////////////////////////
	// Different meanings:
	// repeated: size range of array
	// integer: value range
	// string: range of utf-8 code point
	//
	// optional int32 min = 3001;
	E_Min = &file_options_proto_extTypes[5] // min value
	// optional int32 max = 3002;
	E_Max = &file_options_proto_extTypes[6] // max value
	// optional string range = 3003;
	E_Range = &file_options_proto_extTypes[7] // format like set description: [1,10], (1,10], [1,10), [1,~]
)

// Extension fields to descriptor.MessageOptions.
var (
	// optional string workbook = 2001;
	E_Workbook = &file_options_proto_extTypes[8]
	// optional string worksheet = 2002;
	E_Worksheet = &file_options_proto_extTypes[9]
	// optional uint32 metarow = 2003;
	E_Metarow = &file_options_proto_extTypes[10] // [default = 1]; // exact row number of meta info of this tableau
	// optional uint32 descrow = 2004;
	E_Descrow = &file_options_proto_extTypes[11] // [default = 1]; // exact row number of description of this tableau
	// optional uint32 datarow = 2005;
	E_Datarow = &file_options_proto_extTypes[12] // [default = 2]; // start row number of data
)

var File_options_proto protoreflect.FileDescriptor

var file_options_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2a, 0xc7, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41,
	0x55, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41, 0x55, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x41, 0x55, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41, 0x55, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a,
	0x13, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41, 0x55, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x41,
	0x52, 0x52, 0x41, 0x59, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41,
	0x55, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x52, 0x49, 0x43, 0x48, 0x5f, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x41, 0x55, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x0b, 0x3a, 0x30, 0x0a, 0x03, 0x63,
	0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6f, 0x6c, 0x3a, 0x45, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x61, 0x75, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xd3, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x3a, 0x3c, 0x0a, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd4, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x42,
	0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd5, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x3a, 0x30, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x3a, 0x30, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xba, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x3a, 0x34, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbb,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x3a, 0x3c, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x3a, 0x3e, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x3a, 0x3a, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x61, 0x72, 0x6f, 0x77, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd3, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x65, 0x74, 0x61, 0x72, 0x6f, 0x77, 0x3a, 0x3a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63, 0x72, 0x6f,
	0x77, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xd4, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x6f, 0x77, 0x3a, 0x3a, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x72, 0x6f, 0x77, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd5,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x72, 0x6f, 0x77, 0x42, 0x22,
	0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x65, 0x6e,
	0x63, 0x68, 0x79, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_options_proto_rawDescOnce sync.Once
	file_options_proto_rawDescData = file_options_proto_rawDesc
)

func file_options_proto_rawDescGZIP() []byte {
	file_options_proto_rawDescOnce.Do(func() {
		file_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_proto_rawDescData)
	})
	return file_options_proto_rawDescData
}

var file_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_options_proto_goTypes = []interface{}{
	(TableauFieldType)(0),             // 0: TableauFieldType
	(*descriptor.FieldOptions)(nil),   // 1: google.protobuf.FieldOptions
	(*descriptor.MessageOptions)(nil), // 2: google.protobuf.MessageOptions
}
var file_options_proto_depIdxs = []int32{
	1,  // 0: col:extendee -> google.protobuf.FieldOptions
	1,  // 1: type:extendee -> google.protobuf.FieldOptions
	1,  // 2: required:extendee -> google.protobuf.FieldOptions
	1,  // 3: separator:extendee -> google.protobuf.FieldOptions
	1,  // 4: subseparator:extendee -> google.protobuf.FieldOptions
	1,  // 5: min:extendee -> google.protobuf.FieldOptions
	1,  // 6: max:extendee -> google.protobuf.FieldOptions
	1,  // 7: range:extendee -> google.protobuf.FieldOptions
	2,  // 8: workbook:extendee -> google.protobuf.MessageOptions
	2,  // 9: worksheet:extendee -> google.protobuf.MessageOptions
	2,  // 10: metarow:extendee -> google.protobuf.MessageOptions
	2,  // 11: descrow:extendee -> google.protobuf.MessageOptions
	2,  // 12: datarow:extendee -> google.protobuf.MessageOptions
	0,  // 13: type:type_name -> TableauFieldType
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	13, // [13:14] is the sub-list for extension type_name
	0,  // [0:13] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_options_proto_init() }
func file_options_proto_init() {
	if File_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 13,
			NumServices:   0,
		},
		GoTypes:           file_options_proto_goTypes,
		DependencyIndexes: file_options_proto_depIdxs,
		EnumInfos:         file_options_proto_enumTypes,
		ExtensionInfos:    file_options_proto_extTypes,
	}.Build()
	File_options_proto = out.File
	file_options_proto_rawDesc = nil
	file_options_proto_goTypes = nil
	file_options_proto_depIdxs = nil
}
